

libwavetrans=libwavetrans.so


all: $(libwavetrans)


LIB_SRCS= buff_utils/queue.c \
     buff_utils/queue.h \
     buff_utils/ring_buff.c \
     buff_utils/ring_buff.h \
     checksum_utils/crc_codec.c \
     checksum_utils/crc_codec.h \
     checksum_utils/rs_code.cc \
     checksum_utils/rs_code.h \
     checksum_utils/parity_codec.c \
     checksum_utils/parity_codec.h \
     kiss_fft/_kiss_fft_guts.h \
     kiss_fft/kiss_fastfir.c \
     kiss_fft/kiss_fastfir.h \
     kiss_fft/kiss_fft.c \
     kiss_fft/kiss_fft.h \
     kiss_fft/kiss_fftr.c \
     kiss_fft/kiss_fftr.h \
     log_utils/wt_log.h \
     log_utils/wt_log.c \
     proto_utils/wt_proto_common.h \
     proto_utils/wt_proto_common.c \
     proto_utils/wt_proto_link_layer.c \
     proto_utils/wt_proto_link_layer.h \
     proto_utils/wt_proto_physical_layer.c \
     proto_utils/wt_proto_physical_layer.h \
     transceiver/recv/wt_recv_link_layer.c \
     transceiver/recv/wt_recv_link_layer.h \
     transceiver/recv/wt_recv_physical_layer.c \
     transceiver/recv/wt_recv_physical_layer.h \
     transceiver/send/wt_send_link_layer.c \
     transceiver/send/wt_send_link_layer.h \
     transceiver/send/wt_send_physical_layer.c \
     transceiver/send/wt_send_physical_layer.h \
     interface/wave_trans_recv.c \
     interface/wave_trans_recv.h \
     interface/wave_trans_send.c \
     interface/wave_trans_send.h \
     audio_codec/pcm_to_wav.c \
     audio_codec/pcm_to_wav.h


CFLAGS= -I ./  -std=c++11

CXX=g++



$(libwavetrans):
	$(CXX) -fPIC -shared  -o $(libwavetrans) $(LIB_SRCS) $(CFLAGS)
	$(CXX) -o phy_test demo/phy_test.c $(libwavetrans) $(CFLAGS)
	$(CXX) -o recv_test demo/recv_test.c $(libwavetrans) $(CFLAGS)
	$(CXX) -o send_test demo/send_test.c $(libwavetrans) $(CFLAGS)
	$(CXX) -o test_tools demo/test_tools.c $(libwavetrans) $(CFLAGS)

clean:
	rm *.o $(libwavetrans) phy_test recv_test  send_test test_tools







